# -*- coding: utf-8 -*-
"""Artistic_Style_Identification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VG5VsXaAz9sykJoeoYmVVXwAvRzqyyn3

# **Artistic_Style_Identification**
"""

# Commented out IPython magic to ensure Python compatibility.
from google.colab import drive

# Montar Google Drive
drive.mount('/content/drive')

# %cd "/content/drive/MyDrive/ArtisticStyle/"
!ls

import os
import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt
from skimage.transform import resize
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# Directorios de entrenamiento y prueba
base_dir = 'dataset'
train_dir = os.path.join(base_dir,'train')
test_dir = os.path.join(base_dir, 'test')

# Configuración del generador de aumento de datos
datagen = ImageDataGenerator(
    rescale=1./255, # Escalamiento: Ajustar valores de píxeles a [0, 1]
    rotation_range=20,
    # width_shift_range=0.2,
    # height_shift_range=0.2,
    # zoom_range=0.2,
    horizontal_flip=True
)

test_datagen = ImageDataGenerator(rescale=1./255)

# Carga de imágenes [Aumento de datos: Generar nuevas imágenes]
train_generator = datagen.flow_from_directory(
    train_dir,
    target_size=(256, 256), # Redimensionamiento: Ajustar a tamaño específico
    batch_size=32,
    class_mode='binary'
)

test_generator = test_datagen.flow_from_directory(
    test_dir,
    target_size=(256, 256),
    batch_size=32,
    class_mode='binary'
)

# Visualización de imágenes procesadas
images, labels = next(train_generator)

plt.figure(figsize=(12, 12))
for i in range(9):
    plt.subplot(3, 3, i+1)
    plt.imshow(images[i])
    plt.title(f'Label: {labels[i]}')
    plt.axis('off')

plt.show()